{"version":3,"sources":["components/LoginRoute/index.js","components/SideNavbarOptionButton/index.js","Context/MoneyMattersContext.js","components/LogoutPopup/index.js","components/SideNavbar/index.js","components/TransactionOptionButton/index.js","components/UpdateTransactionPopup/index.js","components/DeletePopup/index.js","components/TransactionItem/index.js","components/AddTransactionPopup/index.js","components/AllTransactions/index.js","components/CreditTransactions/index.js","components/DebitTransactions/index.js","components/Transactions/index.js","components/OverviewGraph/index.js","components/LastTransactionItem/index.js","components/LastTransactions/index.js","components/Accounts/index.js","components/Profile/index.js","components/Dashboard/index.js","components/ProtectedRoute/index.js","App.js","index.js"],"names":["LoginRoute","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","email","password","errorMessage","isLoading","onChangeEmail","event","setState","target","value","onChangePassword","onSubmitSuccess","id","Cookies","set","expires","props","history","replace","submitTheForm","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$state","userDetails","options","response","data","userData","userId","wrap","_context","prev","next","preventDefault","endsWith","method","headers","body","JSON","stringify","fetch","sent","json","ok","getUserId","get_user_id","stop","_x","_createClass","key","_this$state2","this","undefined","get","_jsx","Redirect","to","_jsxs","className","children","src","alt","onSubmit","htmlFor","type","placeholder","onChange","Loader","color","height","width","Component","SideNavbarOptionButton","optionDetails","isActive","changeSideNavbarActiveOptionId","optionId","iconUrl","activeIconUrl","displayText","iconSrc","textClass","buttonClass","onClick","MoneyMatterContext","React","createContext","activeOptionId","optionsList","LogoutPopup","logout","remove","_this2","Popup","modalStyle","borderRadius","trigger","toggleFullScreen","FiLogOut","size","overlayStyle","background","backdropFilter","modal","close","GrClose","withRouter","profileApiConstants","SideNavbar","userDetailsApiStatus","getTheUserDetails","users","renderSuccessUserDetailsView","name","renderLoadingView","renderBottomView","MoneyMattersContext","Consumer","map","eachOption","TransactionOptionButton","details","changeTheActiveTransactionOptionId","optionClassName","categoryList","categoryId","categoryName","UpdateTransactionPopup","onChangeItemType","itemType","onChangeItemTransactionName","itemTransactionName","onChangeItemCategory","itemCategory","onChangeItemDate","itemDate","onChangeItemAmount","itemAmount","getTheDateDetails","date","inputDate","Date","now","hours","getHours","minutes","getMinutes","seconds","getSeconds","setHours","setMinutes","setSeconds","updateTransaction","itemId","dateValue","transactionDetails","Number","isNaN","console","log","category","amount","window","location","reload","transactionName","updatedDate","format","eachCategory","DeletePopup","itemsId","TransactionItem","isAdmin","dateDetails","amountText","amountTextClass","_Fragment","BiUpArrowCircle","BiDownArrowCircle","BiUserCircle","AddTransactionPopup","transactionType","allFieldAreRequiredMessage","transactionNameErrorMessage","amountErrorMessage","onChangeTransactionName","onChangeTransactionType","onChangeCategory","onChangeAmount","onChangeDate","submitAddTransaction","user_id","BiPlus","APIConstants","AllTransactions","allTransactionsData","transactionsApiStatus","compareByDates","a","b","getTheAllTransactions","updatedAllTransactions","transactions","eachTransaction","transaction_name","sort","renderFailureView","getTheTotalCreditsAndDebits","renderALlTransactionSuccessView","eachTransactionDetails","renderTransactionsViews","CreditTransactions","creditTransactionsData","getTheCreditTransactions","creditTransactions","filter","renderCreditTransactionsSuccessView","renderCreditTransactionsViews","DebitTransactions","debitTransactionsData","getTheDebitTransactions","debitTransactions","renderDebitTransactionsSuccessView","renderDebitTransactionsViews","transactionHeaderOptionsList","Transaction","activeTransactionOptionId","renderAllTransactions","renderCreditTransactions","renderDebitTransactions","renderAllTransactionViews","OverviewGraph","barData","apiStatus","getTheLast7DaysTransactionsDetails","url","adminOptions","userOptions","updatedAdminData","updatedData","last_7_days_transactions_totals_admin","each","day","sum","last_7_days_transactions_credit_debit_totals","renderGraph","ResponsiveContainer","BarChart","margin","top","CartesianGrid","strokeDasharray","XAxis","dataKey","tick","stroke","strokeWidth","YAxis","Legend","iconType","wrapperStyle","padding","verticalAlign","align","Bar","fill","barSize","rx","renderGraphSuccessView","creditedList","debitedList","credit","collect","debit","renderBarGraph","LastTransactionItem","LastTransactions","getTransactionApiStatus","transactionData","getTheLastTransactionDetails","updatedTransactionsData","updateTransactions","renderLastTransactionSuccessView","renderLastTransactionDetails","Accounts","creditTotalSum","debitTotalSum","getTotalsApiStatus","updateTheTotals","totalsData","eachData","updatedTotalsData","transactionTotalsAdmin","transaction_totals_admin","totalsCreditDebitTransactions","totals_credit_debit_transactions","renderCreditAndDebitCardsSuccessView","renderCreditAndDebitCards","userProfileApiConstants","Profile","userProfileDetails","userProfileDetailsApiStatus","getTheProfileDetails","fetchedUserProfileData","updatedUserProfileData","city","country","dateOfBirth","date_of_birth","permanentAddress","permanent_address","postalCode","postal_code","presentAddress","present_address","renderUserProfileSuccessView","cityValue","countryValue","dateOfBirthValue","emailValue","nameValue","permanentAddressValue","postalCodeValue","presentAddressValue","readOnly","renderProfileLoadingView","renderAllProfileViews","Dashboard","renderAccounts","renderTransactions","renderProfile","renderAllViews","ProtectedRoute","Route","_objectSpread","sideNavBarOptionsList","App","_React$Component","Provider","Switch","exact","path","component","ReactDOM","render","StrictMode","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.7ae71c30.chunk.js","sourcesContent":["import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport {Redirect} from 'react-router-dom'\nimport Loader from 'react-loader-spinner'\nimport './index.css'\n\nclass LoginRoute extends Component {\n  state = {\n    email: '',\n    password: '',\n    errorMessage: '',\n    isLoading: false,\n  }\n\n  onChangeEmail = event => {\n    this.setState({email: event.target.value})\n  }\n\n  onChangePassword = event => {\n    this.setState({password: event.target.value})\n  }\n\n  onSubmitSuccess = id => {\n    Cookies.set('user_id', id, {expires: 30})\n    const {history} = this.props\n    history.replace('/')\n  }\n\n  submitTheForm = async event => {\n    event.preventDefault()\n    const {email, password} = this.state\n    this.setState({isLoading: true, errorMessage: ''})\n    if (email.endsWith('@gmail.com')) {\n      const userDetails = {\n        email,\n        password,\n      }\n      const options = {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n          'x-hasura-admin-secret':\n            'g08A3qQy00y8yFDq3y6N1ZQnhOPOa4msdie5EtKS1hFStar01JzPKrtKEzYY2BtF',\n        },\n        body: JSON.stringify(userDetails),\n      }\n      const response = await fetch(\n        `https://bursting-gelding-24.hasura.app/api/rest/get-user-id`,\n        options,\n      )\n      const data = await response.json()\n      if (response.ok === true) {\n        const userData = {\n          getUserId: data.get_user_id,\n        }\n        const userId = userData.getUserId[0].id\n        this.onSubmitSuccess(userId)\n      } else {\n        this.setState({\n          errorMessage: 'enter valid Details',\n          email: '',\n          password: '',\n        })\n      }\n    } else {\n      this.setState({\n        errorMessage: 'Enter Valid Input',\n        email: '',\n        password: '',\n        isLoading: false,\n      })\n    }\n  }\n\n  render() {\n    const {email, password, errorMessage, isLoading} = this.state\n    const userId = Cookies.get('user_id')\n    if (userId !== undefined) {\n      return <Redirect to=\"/\" />\n    }\n    return (\n      <div className=\"login-container\">\n        <img\n          src=\"https://res.cloudinary.com/dytmw4swo/image/upload/v1690619700/MONEYMATTERS/43Z_2107.w010.n001.5B.p8.5_ezc9mv.jpg\"\n          className=\"login-image\"\n          alt=\"login\"\n        />\n        <form className=\"login-form\" onSubmit={this.submitTheForm}>\n          <div className=\"webiste-logo-container\">\n            <img\n              src=\"https://res.cloudinary.com/dytmw4swo/image/upload/v1690620128/MONEYMATTERS/Group_1_eodscj.png\"\n              alt=\"webiste logo\"\n              className=\"login-website-logo\"\n            />\n            <h1 className=\"login-webiste-name\">\n              MONEY <span className=\"login-website-span\"> MATTERS</span>\n            </h1>\n          </div>\n          <div className=\"inputs-container username-input-container\">\n            <label className=\"input-labels\" htmlFor=\"email\">\n              email\n            </label>\n            <input\n              value={email}\n              className=\"login-inputs\"\n              id=\"email\"\n              type=\"text\"\n              placeholder=\"Enter the email\"\n              onChange={this.onChangeEmail}\n            />\n          </div>\n          <div className=\"inputs-container\">\n            <label className=\"input-labels\" htmlFor=\"password\">\n              Password\n            </label>\n            <input\n              className=\"login-inputs\"\n              id=\"password\"\n              type=\"password\"\n              placeholder=\"Enter the password\"\n              value={password}\n              onChange={this.onChangePassword}\n            />\n          </div>\n          <p className=\"login-error-message\">{errorMessage}</p>\n          <button className=\"login-button\" type=\"submit\">\n            {isLoading ? (\n              <div className=\"login-loading-container\">\n                <Loader\n                  type=\"TailSpin\"\n                  color=\"#ffffff\"\n                  height=\"20\"\n                  width=\"20\"\n                />\n              </div>\n            ) : (\n              <p className=\"login-text\">Login</p>\n            )}\n          </button>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default LoginRoute\n","import Cookies from 'js-cookie'\nimport './index.css'\n\nconst SideNavbarOptionButton = props => {\n  const {optionDetails, isActive, changeSideNavbarActiveOptionId} = props\n  const userId = Cookies.get('user_id')\n  const {optionId, iconUrl, activeIconUrl} = optionDetails\n  let {displayText} = optionDetails\n  if (optionId === 'TRANSACTIONS') {\n    displayText = userId === '3' ? 'All Transactions' : 'Your Transactions'\n  }\n  const iconSrc = isActive ? activeIconUrl : iconUrl\n  const textClass = isActive ? 'active-side-navbar-option-name' : ''\n  const buttonClass = isActive ? 'active-navbar-option-button' : ''\n  const changeTheId = () => {\n    changeSideNavbarActiveOptionId(optionId)\n  }\n  return (\n    <li className=\"side-navbar-option-item\">\n      <button\n        type=\"button\"\n        onClick={changeTheId}\n        className={`side-navbar-option-button ${buttonClass}`}\n      >\n        <img src={iconSrc} alt=\"icon\" className=\"icon-images\" />\n        <p className={`side-navbar-option-name ${textClass}`}>{displayText}</p>\n      </button>\n    </li>\n  )\n}\n\nexport default SideNavbarOptionButton\n","import React from 'react'\n\nconst MoneyMatterContext = React.createContext({\n  activeOptionId: '',\n  optionsList: [],\n  changeSideNavbarActiveOptionId: () => {},\n})\n\nexport default MoneyMatterContext\n","import {Component} from 'react'\n\nimport Popup from 'reactjs-popup'\nimport {FiLogOut} from 'react-icons/fi'\nimport {GrClose} from 'react-icons/gr'\nimport Cookies from 'js-cookie'\nimport {withRouter} from 'react-router-dom'\nimport './index.css'\n\nclass LogoutPopup extends Component {\n  logout = () => {\n    Cookies.remove('user_id')\n    const {history} = this.props\n    history.replace('/login')\n  }\n\n  render() {\n    return (\n      <Popup\n        modalStyle={{borderRadius: '10px', width: '591px'}}\n        trigger={\n          <button\n            type=\"button\"\n            onClick={this.toggleFullScreen}\n            className=\"logout-button\"\n          >\n            <FiLogOut size=\"18px\" className=\"logout-icon\" color=\"#718EBF\" />\n          </button>\n        }\n        overlayStyle={{\n          background: 'rgba(52, 64, 84, 0.7)',\n          backdropFilter: 'blur(8px)',\n        }}\n        modal\n      >\n        {close => (\n          <div className=\"popup-container\">\n            <div className=\"popup-logout-card\">\n              <img\n                src=\"https://res.cloudinary.com/dytmw4swo/image/upload/v1690792088/MONEYMATTERS/Group_848_diki3m.png\"\n                alt=\"alert\"\n                className=\"alert-image\"\n              />\n              <div className=\"logout-text-container\">\n                <h1 className=\"logout-popup-heading\">\n                  Are you sure you want to Logout?\n                </h1>\n                <p className=\"logout-popup-para\">\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\n                </p>\n                <div className=\"logout-popup-buttons-container\">\n                  <button\n                    className=\"yes-logout-button\"\n                    onClick={this.logout}\n                    type=\"button\"\n                  >\n                    Yes, Logout\n                  </button>\n                  <button\n                    type=\"button\"\n                    onClick={close}\n                    className=\"logout-popup-cancel-button\"\n                  >\n                    Cancel\n                  </button>\n                </div>\n              </div>\n              <button\n                onClick={close}\n                type=\"button\"\n                className=\"popup-close-button\"\n              >\n                <GrClose size=\"20px\" color=\"#718EBF\" />\n              </button>\n            </div>\n          </div>\n        )}\n      </Popup>\n    )\n  }\n}\n\nexport default withRouter(LogoutPopup)\n","import {Component} from 'react'\nimport {withRouter} from 'react-router-dom'\n\nimport './index.css'\nimport Cookies from 'js-cookie'\nimport Loader from 'react-loader-spinner'\nimport SideNavbarOptionButton from '../SideNavbarOptionButton'\nimport MoneyMattersContext from '../../Context/MoneyMattersContext'\nimport LogoutPopup from '../LogoutPopup'\n\nconst profileApiConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProcess: 'IN_PROCESS',\n}\n\nclass SideNavbar extends Component {\n  state = {\n    userDetails: [],\n    userDetailsApiStatus: profileApiConstants.initial,\n  }\n\n  componentDidMount() {\n    this.getTheUserDetails()\n  }\n\n  getTheUserDetails = async () => {\n    this.setState({userDetailsApiStatus: profileApiConstants.inProcess})\n    const id = Cookies.get('user_id')\n    const options = {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'x-hasura-admin-secret':\n          'g08A3qQy00y8yFDq3y6N1ZQnhOPOa4msdie5EtKS1hFStar01JzPKrtKEzYY2BtF',\n        'x-hasura-role': 'user',\n        'x-hasura-user-id': `${id}`,\n      },\n    }\n    const response = await fetch(\n      'https://bursting-gelding-24.hasura.app/api/rest/profile',\n      options,\n    )\n    const data = await response.json()\n    if (response.ok === true) {\n      this.setState({\n        userDetails: data.users[0],\n        userDetailsApiStatus: profileApiConstants.success,\n      })\n    }\n  }\n\n  renderSuccessUserDetailsView = () => {\n    const {userDetails} = this.state\n    const {name, email} = userDetails\n    return (\n      <div className=\"details-container\">\n        <img\n          src=\"https://res.cloudinary.com/dytmw4swo/image/upload/v1690642750/MONEYMATTERS/17004_aepcmr.png\"\n          alt=\"profile\"\n          className=\"side-navbar-profile-image\"\n        />\n        <div className=\"side-bar-profile-details\">\n          <p className=\"user-name\">{name}</p>\n          <p className=\"user-email\">{email}</p>\n        </div>\n        <LogoutPopup />\n      </div>\n    )\n  }\n\n  renderLoadingView = () => (\n    <div className=\"side-nav-bar-profile-loader-container\">\n      <Loader type=\"TailSpin\" color=\"#2D60FF\" height=\"30\" width=\"30\" />\n    </div>\n  )\n\n  renderBottomView = () => {\n    const {userDetailsApiStatus} = this.state\n    switch (userDetailsApiStatus) {\n      case profileApiConstants.success:\n        return this.renderSuccessUserDetailsView()\n      case profileApiConstants.inProcess:\n        return this.renderLoadingView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return (\n      <MoneyMattersContext.Consumer>\n        {value => {\n          const {\n            activeOptionId,\n            optionsList,\n            changeSideNavbarActiveOptionId,\n          } = value\n          return (\n            <nav className=\"side-nav-bar-container\">\n              <div className=\"side-nav-bar-top-section\">\n                <div className=\"website-logo-and-name-container\">\n                  <img\n                    className=\"side-navbar-website-logo\"\n                    src=\"https://res.cloudinary.com/dytmw4swo/image/upload/v1690620128/MONEYMATTERS/Group_1_eodscj.png\"\n                    alt=\"webiste logo\"\n                  />\n                  <h1 className=\"website-name\">\n                    Money <span className=\"website-span-name\"> Matters</span>\n                  </h1>\n                </div>\n                <ul className=\"side-options-container\">\n                  {optionsList.map(eachOption => (\n                    <SideNavbarOptionButton\n                      optionDetails={eachOption}\n                      key={eachOption.optionId}\n                      isActive={activeOptionId === eachOption.optionId}\n                      changeSideNavbarActiveOptionId={\n                        changeSideNavbarActiveOptionId\n                      }\n                    />\n                  ))}\n                </ul>\n              </div>\n              <div className=\"side-navbar-bottom-section\">\n                {this.renderBottomView()}\n              </div>\n            </nav>\n          )\n        }}\n      </MoneyMattersContext.Consumer>\n    )\n  }\n}\n\nexport default withRouter(SideNavbar)\n","import './index.css'\n\nconst TransactionOptionButton = props => {\n  const {details, isActive, changeTheActiveTransactionOptionId} = props\n  const {displayText, optionId} = details\n  const optionClassName = isActive\n    ? 'active-transaction-option-button'\n    : 'transaction-option-button'\n  const ChangeActiveOptionId = () => {\n    changeTheActiveTransactionOptionId(optionId)\n  }\n  return (\n    <li className=\"transaction-option-item\">\n      <button\n        type=\"button\"\n        onClick={ChangeActiveOptionId}\n        className={optionClassName}\n      >\n        {displayText}\n      </button>\n    </li>\n  )\n}\n\nexport default TransactionOptionButton\n","import {Component} from 'react'\nimport Popup from 'reactjs-popup'\nimport {GrClose} from 'react-icons/gr'\nimport format from 'date-fns/format'\nimport Cookies from 'js-cookie'\nimport './index.css'\n\nconst categoryList = [\n  {\n    categoryId: 1,\n    categoryName: 'Transfer',\n  },\n  {\n    categoryId: 2,\n    categoryName: 'Shopping',\n  },\n  {\n    categoryId: 3,\n    categoryName: 'Subscription',\n  },\n  {\n    categoryId: 4,\n    categoryName: 'Food',\n  },\n  {\n    categoryId: 5,\n    categoryName: 'grocery',\n  },\n  {\n    categoryId: 6,\n    categoryName: 'Movie',\n  },\n]\n\nclass UpdateTransactionPopup extends Component {\n  constructor(props) {\n    super(props)\n    const {details} = this.props\n    const {id, type, transactionName, category, date, amount} = details\n    const updatedDate = format(new Date(date), 'yyyy-MM-dd')\n    console.log(transactionName)\n    this.state = {\n      itemId: id,\n      itemType: type,\n      itemTransactionName: transactionName,\n      itemCategory: category,\n      itemDate: updatedDate,\n      itemAmount: amount,\n    }\n  }\n\n  onChangeItemType = event => {\n    this.setState({itemType: event.target.value})\n  }\n\n  onChangeItemTransactionName = event => {\n    this.setState({itemTransactionName: event.target.value})\n  }\n\n  onChangeItemCategory = event => {\n    this.setState({itemCategory: event.target.value})\n  }\n\n  onChangeItemDate = event => {\n    this.setState({itemDate: event.target.value})\n  }\n\n  onChangeItemAmount = event => {\n    this.setState({itemAmount: event.target.value})\n  }\n\n  getTheDateDetails = date => {\n    const inputDate = new Date(date)\n\n    const now = new Date()\n\n    const hours = now.getHours()\n    const minutes = now.getMinutes()\n    const seconds = now.getSeconds()\n\n    inputDate.setHours(hours)\n    inputDate.setMinutes(minutes)\n    inputDate.setSeconds(seconds)\n\n    return inputDate\n  }\n\n  updateTransaction = async event => {\n    event.preventDefault()\n    const userId = Cookies.get('user_id')\n    const {\n      itemType,\n      itemTransactionName,\n      itemCategory,\n      itemDate,\n      itemAmount,\n      itemId,\n    } = this.state\n    if (!Number.isNaN(+itemAmount)) {\n      console.log('true')\n      const dateValue = this.getTheDateDetails(itemDate)\n      const transactionDetails = {\n        name: itemTransactionName,\n        type: itemType,\n        category: itemCategory,\n        amount: itemAmount,\n        date: dateValue,\n        id: itemId,\n      }\n      const options = {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n          'x-hasura-admin-secret':\n            'g08A3qQy00y8yFDq3y6N1ZQnhOPOa4msdie5EtKS1hFStar01JzPKrtKEzYY2BtF',\n          'x-hasura-role': 'user',\n          'x-hasura-user-id': `${userId}`,\n        },\n        body: JSON.stringify(transactionDetails),\n      }\n      const response = await fetch(\n        'https://bursting-gelding-24.hasura.app/api/rest/update-transaction',\n        options,\n      )\n      window.location.reload(false)\n      console.log(response.ok)\n    } else {\n      console.log('false')\n    }\n  }\n\n  render() {\n    const {\n      itemType,\n      itemTransactionName,\n      itemCategory,\n      itemDate,\n      itemAmount,\n    } = this.state\n    return (\n      <Popup\n        trigger={\n          <button type=\"button\" className=\"edit-button\">\n            <img\n              src=\"https://res.cloudinary.com/dytmw4swo/image/upload/v1690695535/MONEYMATTERS/pencil-02_kjipjl.png\"\n              alt=\"pencil\"\n              className=\"edit-image\"\n            />\n          </button>\n        }\n        overlayStyle={{\n          background: 'rgba(52, 64, 84, 0.7)',\n          backdropFilter: 'blur(8px)',\n        }}\n        modal\n      >\n        {close => (\n          <div className=\"update-transactions-popup-container\">\n            <div className=\"update-transaction-popup-card\">\n              <div className=\"update-transaction-heading-container\">\n                <div>\n                  <h1 className=\"update-transaction-heading\">\n                    Update Transaction\n                  </h1>\n                  <p className=\"update-transaction-para\">\n                    You can update your transaction here\n                  </p>\n                </div>\n\n                <button\n                  onClick={close}\n                  type=\"button\"\n                  className=\"update-transaction-popup-close-button\"\n                >\n                  <GrClose size=\"20px\" color=\"#718EBF\" />\n                </button>\n              </div>\n              <form\n                className=\"update-transaction-inputs-form\"\n                onSubmit={this.updateTransaction}\n              >\n                <div className=\"update-transactions-inputs-wrapper\">\n                  <label\n                    htmlFor=\"transactionName\"\n                    className=\"update-transactions-popup-labels\"\n                  >\n                    Transaction Name\n                  </label>\n                  <input\n                    value={itemTransactionName}\n                    onChange={this.onChangeItemTransactionName}\n                    className=\"update-transactions-popup-inputs\"\n                    id=\"transactionName\"\n                    type=\"text\"\n                    placeholder=\"Enter Name\"\n                  />\n                </div>\n                <div className=\"update-transactions-inputs-wrapper\">\n                  <label\n                    htmlFor=\"transactionType\"\n                    className=\"update-transactions-popup-labels\"\n                  >\n                    Transaction Type\n                  </label>\n                  <select\n                    onChange={this.onChangeItemType}\n                    value={itemType}\n                    className=\"update-transactions-popup-inputs\"\n                    id=\"transactionType\"\n                    type=\"text\"\n                    placeholder=\"Enter Transaction Type\"\n                  >\n                    <option value=\"credit\">Credit</option>\n                    <option value=\"debit\">Debit</option>\n                  </select>\n                </div>\n                <div className=\"update-transactions-inputs-wrapper\">\n                  <label\n                    htmlFor=\"category\"\n                    className=\"update-transactions-popup-labels\"\n                  >\n                    Category\n                  </label>\n                  <select\n                    value={itemCategory}\n                    onChange={this.onChangeItemCategory}\n                    className=\"update-transactions-popup-inputs\"\n                    id=\"category\"\n                    type=\"text\"\n                    placeholder=\"Select\"\n                  >\n                    {categoryList.map(eachCategory => (\n                      <option\n                        key={eachCategory.categoryId}\n                        value={eachCategory.categoryName}\n                      >\n                        {eachCategory.categoryName}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                <div className=\"update-transactions-inputs-wrapper\">\n                  <label\n                    htmlFor=\"amount\"\n                    className=\"update-transactions-popup-labels\"\n                  >\n                    Amount\n                  </label>\n                  <input\n                    value={itemAmount}\n                    onChange={this.onChangeItemAmount}\n                    className=\"update-transactions-popup-inputs\"\n                    id=\"amount\"\n                    type=\"text\"\n                    placeholder=\"Enter Your Amount\"\n                  />\n                </div>\n                <div className=\"update-transactions-inputs-wrapper\">\n                  <label\n                    htmlFor=\"date\"\n                    className=\"update-transactions-popup-labels\"\n                  >\n                    Date\n                  </label>\n                  <input\n                    value={itemDate}\n                    onChange={this.onChangeItemDate}\n                    className=\"update-transactions-popup-inputs\"\n                    id=\"Date\"\n                    type=\"date\"\n                    placeholder=\"Date\"\n                  />\n                </div>\n                <button\n                  type=\"submit\"\n                  className=\"update-transaction-popup-button\"\n                >\n                  Update Transaction\n                </button>\n              </form>\n            </div>\n          </div>\n        )}\n      </Popup>\n    )\n  }\n}\n\nexport default UpdateTransactionPopup\n","import {Component} from 'react'\nimport Popup from 'reactjs-popup'\n// import {FiLogOut} from 'react-icons/fi'\nimport {GrClose} from 'react-icons/gr'\nimport Cookies from 'js-cookie'\n// import {withRouter} from 'react-router-dom'\n\nimport './index.css'\n\nclass DeletePopup extends Component {\n  delete = async () => {\n    const {itemId} = this.props\n    const userId = Cookies.get('user_id')\n    const itemsId = {\n      id: itemId,\n    }\n    const options = {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json',\n        'x-hasura-admin-secret':\n          'g08A3qQy00y8yFDq3y6N1ZQnhOPOa4msdie5EtKS1hFStar01JzPKrtKEzYY2BtF',\n        'x-hasura-role': 'user',\n        'x-hasura-user-id': `${userId}`,\n      },\n      body: JSON.stringify(itemsId),\n    }\n    const response = await fetch(\n      'https://bursting-gelding-24.hasura.app/api/rest/delete-transaction',\n      options,\n    )\n    window.location.reload(false)\n  }\n\n  render() {\n    return (\n      <Popup\n        modalStyle={{borderRadius: '10px', width: '591px'}}\n        trigger={\n          <button type=\"button\" className=\"delete-button\">\n            <img\n              src=\"https://res.cloudinary.com/dytmw4swo/image/upload/v1690695667/MONEYMATTERS/trash-01_mfx7en.png\"\n              alt=\"delete\"\n              className=\"delete-image\"\n            />\n          </button>\n        }\n        overlayStyle={{\n          background: 'rgba(52, 64, 84, 0.7)',\n          backdropFilter: 'blur(8px)',\n        }}\n        modal\n      >\n        {close => (\n          <div className=\"delete-popup-container\">\n            <div className=\"delete-popup-card\">\n              <img\n                src=\"https://res.cloudinary.com/dytmw4swo/image/upload/v1690792088/MONEYMATTERS/Group_848_diki3m.png\"\n                alt=\"alert\"\n                className=\"delete-alert-image\"\n              />\n              <div className=\"delete-text-container\">\n                <h1 className=\"delete-popup-heading\">\n                  Are you sure you want to Delete?\n                </h1>\n                <p className=\"delete-popup-para\">\n                  This transaction will be deleted immediately. You can’t undo\n                  this action.\n                </p>\n                <div className=\"delete-popup-buttons-container\">\n                  <button\n                    className=\"yes-delete-button\"\n                    onClick={this.delete}\n                    type=\"button\"\n                  >\n                    Yes, Delete\n                  </button>\n                  <button\n                    type=\"button\"\n                    onClick={close}\n                    className=\"delete-popup-leave-it-button\"\n                  >\n                    No, Leave it\n                  </button>\n                </div>\n              </div>\n              <button\n                onClick={close}\n                type=\"button\"\n                className=\"delete-popup-close-button\"\n              >\n                <GrClose size=\"20px\" color=\"#718EBF\" />\n              </button>\n            </div>\n          </div>\n        )}\n      </Popup>\n    )\n  }\n}\n\nexport default DeletePopup\n","import format from 'date-fns/format'\n\nimport {BiUpArrowCircle, BiDownArrowCircle, BiUserCircle} from 'react-icons/bi'\nimport Cookies from 'js-cookie'\nimport './index.css'\nimport UpdateTransactionPopup from '../UpdateTransactionPopup'\nimport DeletePopup from '../DeletePopup'\n\nconst TransactionItem = props => {\n  const userId = Cookies.get('user_id')\n  const isAdmin = userId === '3'\n  const {details} = props\n  const {id, type, transactionName, category, date, amount} = details\n  const dateDetails = format(new Date(date), 'd MMM, h:m aa')\n  const amountText = type === 'credit' ? `+$${amount}` : `-$${amount}`\n  const amountTextClass =\n    type === 'credit'\n      ? 'all-transaction-credit-amount'\n      : 'all-transaction-debit-amount'\n  return (\n    <>\n      {isAdmin ? (\n        <li className=\"transaction-item\">\n          <div className=\"transaction-detail-container\">\n            {type === 'credit' ? (\n              <BiUpArrowCircle size=\"30px\" color=\"#718EBF\" />\n            ) : (\n              <BiDownArrowCircle size=\"30px\" color=\"#718EBF\" />\n            )}\n            <BiUserCircle\n              size=\"30px\"\n              color=\"#000000\"\n              className=\"transaction-item-user-profile-icon\"\n            />\n            <p className=\"transaction-item-user-name\">Arlene McCoy</p>\n            <p className=\"admin-transaction-name-1\">{transactionName}</p>\n            <p className=\"admin-transaction-category-1\">{category}</p>\n            <p className=\"admin-transaction-date-details-1\">{dateDetails}</p>\n            <p className={amountTextClass}>{amountText}</p>\n          </div>\n        </li>\n      ) : (\n        <li className=\"all-transaction-item\">\n          <div className=\"all-transaction-detail-container\">\n            {type === 'credit' ? (\n              <BiUpArrowCircle size=\"30px\" color=\"#718EBF\" />\n            ) : (\n              <BiDownArrowCircle size=\"30px\" color=\"#718EBF\" />\n            )}\n            <p className=\"all-transaction-name\">{transactionName}</p>\n            <p className=\"all-transaction-category\">{category}</p>\n            <p className=\"all-transaction-date-details\">{dateDetails}</p>\n            <p className={amountTextClass}>{amountText}</p>\n            <UpdateTransactionPopup details={details} />\n            <DeletePopup itemId={id} />\n          </div>\n        </li>\n      )}{' '}\n    </>\n  )\n}\n\nexport default TransactionItem\n","import {Component} from 'react'\nimport {BiPlus} from 'react-icons/bi'\nimport Popup from 'reactjs-popup'\nimport Cookies from 'js-cookie'\nimport {GrClose} from 'react-icons/gr'\nimport './index.css'\n\nconst categoryList = [\n  {\n    categoryId: 1,\n    categoryName: 'Transfer',\n  },\n  {\n    categoryId: 2,\n    categoryName: 'Shopping',\n  },\n  {\n    categoryId: 3,\n    categoryName: 'Subscription',\n  },\n  {\n    categoryId: 4,\n    categoryName: 'Food',\n  },\n  {\n    categoryId: 5,\n    categoryName: 'grocery',\n  },\n  {\n    categoryId: 6,\n    categoryName: 'Movie',\n  },\n]\n\nclass AddTransactionPopup extends Component {\n  state = {\n    transactionName: '',\n    transactionType: '',\n    category: '',\n    amount: '',\n    date: '',\n    allFieldAreRequiredMessage: false,\n    transactionNameErrorMessage: false,\n    amountErrorMessage: false,\n  }\n\n  onChangeTransactionName = event => {\n    this.setState({transactionName: event.target.value})\n  }\n\n  onChangeTransactionType = event => {\n    this.setState({transactionType: event.target.value})\n  }\n\n  onChangeCategory = event => {\n    this.setState({category: event.target.value})\n  }\n\n  onChangeAmount = event => {\n    this.setState({amount: event.target.value})\n  }\n\n  onChangeDate = event => {\n    this.setState({date: event.target.value})\n  }\n\n  getTheDateDetails = date => {\n    const inputDate = new Date(date)\n\n    const now = new Date()\n\n    const hours = now.getHours()\n    const minutes = now.getMinutes()\n    const seconds = now.getSeconds()\n\n    inputDate.setHours(hours)\n    inputDate.setMinutes(minutes)\n    inputDate.setSeconds(seconds)\n\n    return inputDate\n  }\n\n  submitAddTransaction = async event => {\n    event.preventDefault()\n    const userId = Cookies.get('user_id')\n    const {\n      transactionName,\n      transactionType,\n      category,\n      amount,\n      date,\n    } = this.state\n    if (transactionName.length > 30) {\n      this.setState({transactionNameErrorMessage: true})\n    } else if (\n      transactionName === '' &&\n      transactionType === '' &&\n      category === '' &&\n      amount === '' &&\n      date === ''\n    ) {\n      this.setState({allFieldAreRequiredMessage: true})\n    } else if (!Number.isNaN(amount) && amount < 0) {\n      this.setState({amountErrorMessage: true})\n    } else {\n      const dateValue = this.getTheDateDetails(date)\n      const transactionDetails = {\n        name: transactionName,\n        type: transactionType,\n        category,\n        amount,\n        date: dateValue,\n        user_id: userId,\n      }\n      const options = {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n          'x-hasura-admin-secret':\n            'g08A3qQy00y8yFDq3y6N1ZQnhOPOa4msdie5EtKS1hFStar01JzPKrtKEzYY2BtF',\n          'x-hasura-role': 'user',\n          'x-hasura-user-id': `${userId}`,\n        },\n        body: JSON.stringify(transactionDetails),\n      }\n      const response = await fetch(\n        'https://bursting-gelding-24.hasura.app/api/rest/add-transaction',\n        options,\n      )\n      window.location.reload(false)\n    }\n  }\n\n  render() {\n    const {\n      transactionName,\n      transactionType,\n      category,\n      amount,\n      date,\n      allFieldAreRequiredMessage,\n      transactionNameErrorMessage,\n      amountErrorMessage,\n    } = this.state\n    return (\n      <Popup\n        trigger={\n          <button type=\"button\" className=\"add-transaction-button\">\n            <BiPlus size=\"20px\" color=\"#ffffff\" />\n            Add Transaction\n          </button>\n        }\n        overlayStyle={{\n          background: 'rgba(52, 64, 84, 0.7)',\n          backdropFilter: 'blur(8px)',\n        }}\n        modal\n      >\n        {close => (\n          <div className=\"aadd-transactions-popup-container\">\n            <div className=\"add-transaction-popup-card\">\n              <div className=\"heading-container\">\n                <div>\n                  <h1 className=\"add-transaction-heading\">Add Transaction</h1>\n                  <p className=\"add-transaction-para\">\n                    Lorem ipsum dolor sit amet, consectetur{' '}\n                  </p>\n                </div>\n                <button\n                  onClick={close}\n                  type=\"button\"\n                  className=\"add-transaction-popup-close-button\"\n                >\n                  <GrClose size=\"20px\" color=\"#718EBF\" />\n                </button>\n              </div>\n              <form\n                className=\"inputs-form\"\n                onSubmit={this.submitAddTransaction}\n              >\n                <div className=\"add-transactions-inputs-wrapper\">\n                  <label\n                    htmlFor=\"transactionName\"\n                    className=\"add-transactions-popup-labels\"\n                  >\n                    Transaction Name\n                  </label>\n                  <input\n                    value={transactionName}\n                    className=\"add-transactions-popup-inputs\"\n                    id=\"transactionName\"\n                    type=\"text\"\n                    placeholder=\"Enter Name\"\n                    onChange={this.onChangeTransactionName}\n                  />\n                  {transactionNameErrorMessage && (\n                    <p className=\"inputs-error-message\">\n                      This field should have a maximum of 30 characters\n                    </p>\n                  )}\n                </div>\n                <div className=\"add-transactions-inputs-wrapper\">\n                  <label\n                    htmlFor=\"transactionType\"\n                    className=\"add-transactions-popup-labels\"\n                  >\n                    Transaction Type\n                  </label>\n                  <select\n                    value={transactionType}\n                    className=\"add-transactions-popup-inputs\"\n                    id=\"transactionType\"\n                    type=\"text\"\n                    placeholder=\"Enter Transaction Type\"\n                    onChange={this.onChangeTransactionType}\n                  >\n                    <option value=\"credit\">Credit</option>\n                    <option value=\"debit\">Debit</option>\n                  </select>\n                </div>\n                <div className=\"add-transactions-inputs-wrapper\">\n                  <label\n                    htmlFor=\"category\"\n                    className=\"add-transactions-popup-labels\"\n                  >\n                    Category\n                  </label>\n                  <select\n                    className=\"add-transactions-popup-inputs\"\n                    id=\"category\"\n                    type=\"text\"\n                    placeholder=\"Select\"\n                    value={category}\n                    onChange={this.onChangeCategory}\n                  >\n                    {categoryList.map(eachCategory => (\n                      <option\n                        key={eachCategory.categoryId}\n                        value={eachCategory.categoryName}\n                      >\n                        {eachCategory.categoryName}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                <div className=\"add-transactions-inputs-wrapper\">\n                  <label\n                    htmlFor=\"amount\"\n                    className=\"add-transactions-popup-labels\"\n                  >\n                    Amount\n                  </label>\n                  <input\n                    value={amount}\n                    className=\"add-transactions-popup-inputs\"\n                    id=\"amount\"\n                    type=\"text\"\n                    placeholder=\"Enter Your Amount\"\n                    onChange={this.onChangeAmount}\n                  />\n                  {amountErrorMessage && (\n                    <p className=\"inputs-error-message\">enter valid input*</p>\n                  )}\n                </div>\n                <div className=\"add-transactions-inputs-wrapper\">\n                  <label\n                    htmlFor=\"date\"\n                    className=\"add-transactions-popup-labels\"\n                  >\n                    Date\n                  </label>\n                  <input\n                    className=\"add-transactions-popup-inputs\"\n                    id=\"Date\"\n                    type=\"date\"\n                    placeholder=\"Date\"\n                    value={date}\n                    onChange={this.onChangeDate}\n                  />\n                </div>\n                {allFieldAreRequiredMessage && (\n                  <p className=\"inputs-error-message\">\n                    All fields are required*\n                  </p>\n                )}\n                <button type=\"submit\" className=\"add-transaction-popup-button\">\n                  Add Transaction\n                </button>\n              </form>\n            </div>\n          </div>\n        )}\n      </Popup>\n    )\n  }\n}\n\nexport default AddTransactionPopup\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport Loader from 'react-loader-spinner'\nimport './index.css'\nimport TransactionItem from '../TransactionItem'\nimport AddTransactionPopup from '../AddTransactionPopup'\n\nconst APIConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProcess: 'IN_PROCESS',\n}\n\nclass AllTransactions extends Component {\n  state = {\n    allTransactionsData: [],\n    transactionsApiStatus: APIConstants.initial,\n  }\n\n  componentDidMount() {\n    this.getTheAllTransactions()\n  }\n\n  compareByDates = (a, b) => {\n    const data1 = new Date(a.date)\n    const data2 = new Date(b.date)\n    const differenceBetweenDates = data1 - data2\n    return -differenceBetweenDates\n  }\n\n  getTheAllTransactions = async () => {\n    this.setState({transactionsApiStatus: APIConstants.inProcess})\n    const userId = Cookies.get('user_id')\n    const options = {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'x-hasura-admin-secret':\n          'g08A3qQy00y8yFDq3y6N1ZQnhOPOa4msdie5EtKS1hFStar01JzPKrtKEzYY2BtF',\n        'x-hasura-role': 'user',\n        'x-hasura-user-id': `${userId}`,\n      },\n    }\n    const response = await fetch(\n      'https://bursting-gelding-24.hasura.app/api/rest/all-transactions?offset=0&limit=50',\n      options,\n    )\n    const data = await response.json()\n    if (response.ok === true) {\n      const updatedAllTransactions = data.transactions.map(eachTransaction => ({\n        amount: eachTransaction.amount,\n        category: eachTransaction.category,\n        date: eachTransaction.date,\n        id: eachTransaction.id,\n        transactionName: eachTransaction.transaction_name,\n        type: eachTransaction.type,\n        userId: eachTransaction.user_id,\n      }))\n      updatedAllTransactions.sort(this.compareByDates)\n      this.setState({\n        allTransactionsData: updatedAllTransactions,\n        transactionsApiStatus: APIConstants.success,\n      })\n    } else {\n      this.setState({transactionsApiStatus: APIConstants.failure})\n    }\n  }\n\n  renderFailureView = () => (\n    <div className=\"failure-view-card\">\n      <img\n        src=\"https://res.cloudinary.com/dytmw4swo/image/upload/v1690861891/MONEYMATTERS/Feeling_sorry-cuate_ogigsk.png\"\n        alt=\"error\"\n        className=\"error-image\"\n      />\n      <h1 className=\"error-heading\">Something Went Wrong</h1>\n      <button\n        type=\"button\"\n        className=\"retry-button\"\n        onClick={this.getTheTotalCreditsAndDebits}\n      >\n        Retry\n      </button>\n    </div>\n  )\n\n  renderLoadingView = () => (\n    <div className=\"credit-debit-loader-container\">\n      <Loader type=\"ThreeDots\" color=\"#2D60FF\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderALlTransactionSuccessView = () => {\n    const {allTransactionsData} = this.state\n    const userId = Cookies.get('user_id')\n    const isAdmin = userId === '3'\n    if (allTransactionsData.length === 0) {\n      return (\n        <div className=\"last-transaction-container\">\n          <div className=\"last-three-transaction-container-no-result\">\n            <img\n              src=\"https://res.cloudinary.com/dytmw4swo/image/upload/v1690859828/MONEYMATTERS/No_data-cuate_u47df0.png\"\n              alt=\"no result\"\n              className=\"no-result-image\"\n            />\n            <div className=\"no-result-text-container\">\n              <h1 className=\"no-result-heading\">No Transactions Found</h1>\n              <p className=\"no-result-para\">\n                Add transaction to see the All Transaction\n              </p>\n              <AddTransactionPopup />\n            </div>\n          </div>\n        </div>\n      )\n    }\n    return (\n      <div className=\"all-transactions-card\">\n        {isAdmin ? (\n          <div className=\"all-transaction-table-headings-container\">\n            <p className=\"transactions-table-headings transaction-heading-user-name\">\n              User Name\n            </p>\n            <p className=\"transactions-table-headings\">Transaction Name</p>\n            <p className=\"transactions-table-headings transaction-admin-category\">\n              Category\n            </p>\n            <p className=\"transactions-table-headings admin-margin-date\">\n              Date\n            </p>\n            <p className=\"transactions-table-headings admin-amount-transaction\">\n              Amount\n            </p>\n          </div>\n        ) : (\n          <div className=\"all-transaction-table-headings-container\">\n            <p className=\"transactions-table-headings\">Transaction Name</p>\n            <p className=\"transactions-table-headings category\">Category</p>\n            <p className=\"transactions-table-headings date\">Date</p>\n            <p className=\"transactions-table-headings amount\">Amount</p>\n          </div>\n        )}\n        <ul className=\"all-transaction-list-container\">\n          {allTransactionsData.map(eachTransactionDetails => (\n            <TransactionItem\n              details={eachTransactionDetails}\n              key={eachTransactionDetails.id}\n            />\n          ))}\n        </ul>\n      </div>\n    )\n  }\n\n  renderTransactionsViews = () => {\n    const {transactionsApiStatus} = this.state\n    switch (transactionsApiStatus) {\n      case APIConstants.success:\n        return this.renderALlTransactionSuccessView()\n      case APIConstants.failure:\n        return this.renderFailureView()\n      case APIConstants.inProcess:\n        return this.renderLoadingView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return <div>{this.renderTransactionsViews()}</div>\n  }\n}\n\nexport default AllTransactions\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport Loader from 'react-loader-spinner'\nimport './index.css'\nimport TransactionItem from '../TransactionItem'\nimport AddTransactionPopup from '../AddTransactionPopup'\n\nconst APIConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProcess: 'IN_PROCESS',\n}\n\nclass CreditTransactions extends Component {\n  state = {\n    creditTransactionsData: [],\n    transactionsApiStatus: APIConstants.initial,\n  }\n\n  componentDidMount() {\n    this.getTheCreditTransactions()\n  }\n\n  compareByDates = (a, b) => {\n    const data1 = new Date(a.date)\n    const data2 = new Date(b.date)\n    const differenceBetweenDates = data1 - data2\n    return -differenceBetweenDates\n  }\n\n  getTheCreditTransactions = async () => {\n    this.setState({transactionsApiStatus: APIConstants.inProcess})\n    const userId = Cookies.get('user_id')\n    const options = {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'x-hasura-admin-secret':\n          'g08A3qQy00y8yFDq3y6N1ZQnhOPOa4msdie5EtKS1hFStar01JzPKrtKEzYY2BtF',\n        'x-hasura-role': 'user',\n        'x-hasura-user-id': `${userId}`,\n      },\n    }\n    const response = await fetch(\n      'https://bursting-gelding-24.hasura.app/api/rest/all-transactions?offset=0&limit=50',\n      options,\n    )\n    const data = await response.json()\n    if (response.ok === true) {\n      const updatedAllTransactions = data.transactions.map(eachTransaction => ({\n        amount: eachTransaction.amount,\n        category: eachTransaction.category,\n        date: eachTransaction.date,\n        id: eachTransaction.id,\n        transactionName: eachTransaction.transaction_name,\n        type: eachTransaction.type,\n        userId: eachTransaction.user_id,\n      }))\n      const creditTransactions = updatedAllTransactions.filter(\n        eachTransaction => eachTransaction.type === 'credit',\n      )\n      creditTransactions.sort(this.compareByDates)\n      this.setState({\n        creditTransactionsData: creditTransactions,\n        transactionsApiStatus: APIConstants.success,\n      })\n    } else {\n      this.setState({transactionsApiStatus: APIConstants.failure})\n    }\n  }\n\n  renderLoadingView = () => (\n    <div className=\"credit-debit-loader-container\">\n      <Loader type=\"ThreeDots\" color=\"#2D60FF\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderFailureView = () => (\n    <div className=\"failure-view-card\">\n      <img\n        src=\"https://res.cloudinary.com/dytmw4swo/image/upload/v1690861891/MONEYMATTERS/Feeling_sorry-cuate_ogigsk.png\"\n        alt=\"error\"\n        className=\"error-image\"\n      />\n      <h1 className=\"error-heading\">Something Went Wrong</h1>\n      <button\n        type=\"button\"\n        className=\"retry-button\"\n        onClick={this.getTheTotalCreditsAndDebits}\n      >\n        Retry\n      </button>\n    </div>\n  )\n\n  renderCreditTransactionsSuccessView = () => {\n    const {creditTransactionsData} = this.state\n    const userId = Cookies.get('user_id')\n    const isAdmin = userId === '3'\n    if (creditTransactionsData.length === 0) {\n      return (\n        <div className=\"last-transaction-container\">\n          <div className=\"last-three-transaction-container-no-result\">\n            <img\n              src=\"https://res.cloudinary.com/dytmw4swo/image/upload/v1690859828/MONEYMATTERS/No_data-cuate_u47df0.png\"\n              alt=\"no result\"\n              className=\"no-result-image\"\n            />\n            <div className=\"no-result-text-container\">\n              <h1 className=\"no-result-heading\">No Transactions Found</h1>\n              <p className=\"no-result-para\">\n                Add transaction to see the All Transaction\n              </p>\n              <AddTransactionPopup />\n            </div>\n          </div>\n        </div>\n      )\n    }\n    return (\n      <div className=\"all-transactions-card\">\n        {isAdmin ? (\n          <div className=\"all-transaction-table-headings-container\">\n            <p className=\"transactions-table-headings transaction-heading-user-name\">\n              User Name\n            </p>\n            <p className=\"transactions-table-headings\">Transaction Name</p>\n            <p className=\"transactions-table-headings transaction-admin-category\">\n              Category\n            </p>\n            <p className=\"transactions-table-headings admin-margin-date\">\n              Date\n            </p>\n            <p className=\"transactions-table-headings admin-amount-transaction\">\n              Amount\n            </p>\n          </div>\n        ) : (\n          <div className=\"all-transaction-table-headings-container\">\n            <p className=\"transactions-table-headings\">Transaction Name</p>\n            <p className=\"transactions-table-headings category\">Category</p>\n            <p className=\"transactions-table-headings date\">Date</p>\n            <p className=\"transactions-table-headings amount\">Amount</p>\n          </div>\n        )}\n        <ul className=\"all-transaction-list-container\">\n          {creditTransactionsData.map(eachTransactionDetails => (\n            <TransactionItem\n              details={eachTransactionDetails}\n              key={eachTransactionDetails.id}\n            />\n          ))}\n        </ul>\n      </div>\n    )\n  }\n\n  renderCreditTransactionsViews = () => {\n    const {transactionsApiStatus} = this.state\n    switch (transactionsApiStatus) {\n      case APIConstants.success:\n        return this.renderCreditTransactionsSuccessView()\n      case APIConstants.failure:\n        return this.renderFailureView()\n      case APIConstants.inProcess:\n        return this.renderLoadingView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return <div>{this.renderCreditTransactionsViews()}</div>\n  }\n}\n\nexport default CreditTransactions\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport Loader from 'react-loader-spinner'\nimport './index.css'\nimport TransactionItem from '../TransactionItem'\nimport AddTransactionPopup from '../AddTransactionPopup'\n\nconst APIConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProcess: 'IN_PROCESS',\n}\n\nclass DebitTransactions extends Component {\n  state = {\n    debitTransactionsData: [],\n    transactionsApiStatus: APIConstants.initial,\n  }\n\n  componentDidMount() {\n    this.getTheDebitTransactions()\n  }\n\n  compareByDates = (a, b) => {\n    const data1 = new Date(a.date)\n    const data2 = new Date(b.date)\n    const differenceBetweenDates = data1 - data2\n    return -differenceBetweenDates\n  }\n\n  getTheDebitTransactions = async () => {\n    this.setState({transactionsApiStatus: APIConstants.inProcess})\n    const userId = Cookies.get('user_id')\n    const options = {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'x-hasura-admin-secret':\n          'g08A3qQy00y8yFDq3y6N1ZQnhOPOa4msdie5EtKS1hFStar01JzPKrtKEzYY2BtF',\n        'x-hasura-role': 'user',\n        'x-hasura-user-id': `${userId}`,\n      },\n    }\n    const response = await fetch(\n      'https://bursting-gelding-24.hasura.app/api/rest/all-transactions?offset=0&limit=50',\n      options,\n    )\n    const data = await response.json()\n    if (response.ok === true) {\n      const updatedAllTransactions = data.transactions.map(eachTransaction => ({\n        amount: eachTransaction.amount,\n        category: eachTransaction.category,\n        date: eachTransaction.date,\n        id: eachTransaction.id,\n        transactionName: eachTransaction.transaction_name,\n        type: eachTransaction.type,\n        userId: eachTransaction.user_id,\n      }))\n      const debitTransactions = updatedAllTransactions.filter(\n        eachTransaction => eachTransaction.type === 'debit',\n      )\n      debitTransactions.sort(this.compareByDates)\n      this.setState({\n        debitTransactionsData: debitTransactions,\n        transactionsApiStatus: APIConstants.success,\n      })\n    } else {\n      this.setState({transactionsApiStatus: APIConstants.failure})\n    }\n  }\n\n  renderLoadingView = () => (\n    <div className=\"credit-debit-loader-container\">\n      <Loader type=\"ThreeDots\" color=\"#2D60FF\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderDebitTransactionsSuccessView = () => {\n    const {debitTransactionsData} = this.state\n    const userId = Cookies.get('user_id')\n    const isAdmin = userId === '3'\n    if (debitTransactionsData.length === 0) {\n      return (\n        <div className=\"last-transaction-container\">\n          <div className=\"last-three-transaction-container-no-result\">\n            <img\n              src=\"https://res.cloudinary.com/dytmw4swo/image/upload/v1690859828/MONEYMATTERS/No_data-cuate_u47df0.png\"\n              alt=\"no result\"\n              className=\"no-result-image\"\n            />\n            <div className=\"no-result-text-container\">\n              <h1 className=\"no-result-heading\">No Transactions Found</h1>\n              <p className=\"no-result-para\">\n                Add transaction to see the All Transaction\n              </p>\n              <AddTransactionPopup />\n            </div>\n          </div>\n        </div>\n      )\n    }\n    return (\n      <div className=\"all-transactions-card\">\n        {isAdmin ? (\n          <div className=\"all-transaction-table-headings-container\">\n            <p className=\"transactions-table-headings transaction-heading-user-name\">\n              User Name\n            </p>\n            <p className=\"transactions-table-headings\">Transaction Name</p>\n            <p className=\"transactions-table-headings transaction-admin-category\">\n              Category\n            </p>\n            <p className=\"transactions-table-headings admin-margin-date\">\n              Date\n            </p>\n            <p className=\"transactions-table-headings admin-amount-transaction\">\n              Amount\n            </p>\n          </div>\n        ) : (\n          <div className=\"all-transaction-table-headings-container\">\n            <p className=\"transactions-table-headings\">Transaction Name</p>\n            <p className=\"transactions-table-headings category\">Category</p>\n            <p className=\"transactions-table-headings date\">Date</p>\n            <p className=\"transactions-table-headings amount\">Amount</p>\n          </div>\n        )}\n        <ul className=\"all-transaction-list-container\">\n          {debitTransactionsData.map(eachTransactionDetails => (\n            <TransactionItem\n              details={eachTransactionDetails}\n              key={eachTransactionDetails.id}\n            />\n          ))}\n        </ul>\n      </div>\n    )\n  }\n\n  renderFailureView = () => (\n    <div className=\"failure-view-card\">\n      <img\n        src=\"https://res.cloudinary.com/dytmw4swo/image/upload/v1690861891/MONEYMATTERS/Feeling_sorry-cuate_ogigsk.png\"\n        alt=\"error\"\n        className=\"error-image\"\n      />\n      <h1 className=\"error-heading\">Something Went Wrong</h1>\n      <button\n        type=\"button\"\n        className=\"retry-button\"\n        onClick={this.getTheTotalCreditsAndDebits}\n      >\n        Retry\n      </button>\n    </div>\n  )\n\n  renderDebitTransactionsViews = () => {\n    const {transactionsApiStatus} = this.state\n    switch (transactionsApiStatus) {\n      case APIConstants.success:\n        return this.renderDebitTransactionsSuccessView()\n      case APIConstants.failure:\n        return this.renderFailureView()\n      case APIConstants.inProcess:\n        return this.renderLoadingView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return <div>{this.renderDebitTransactionsViews()}</div>\n  }\n}\n\nexport default DebitTransactions\n","import {Component} from 'react'\n\nimport './index.css'\nimport TransactionOptionButton from '../TransactionOptionButton'\nimport AllTransactions from '../AllTransactions'\nimport CreditTransactions from '../CreditTransactions'\nimport DebitTransactions from '../DebitTransactions'\n\nconst transactionHeaderOptionsList = [\n  {\n    optionId: 'All_TRANSACTIONS',\n    displayText: 'All Transactions',\n  },\n  {\n    optionId: 'DEBIT',\n    displayText: 'Debit',\n  },\n  {\n    optionId: 'CREDIT',\n    displayText: 'Credit',\n  },\n]\n\nclass Transaction extends Component {\n  state = {\n    activeTransactionOptionId: transactionHeaderOptionsList[0].optionId,\n  }\n\n  changeTheActiveTransactionOptionId = id => {\n    this.setState({activeTransactionOptionId: id})\n  }\n\n  renderAllTransactions = () => <AllTransactions />\n\n  renderCreditTransactions = () => <CreditTransactions />\n\n  renderDebitTransactions = () => <DebitTransactions />\n\n  renderAllTransactionViews = () => {\n    const {activeTransactionOptionId} = this.state\n    switch (activeTransactionOptionId) {\n      case transactionHeaderOptionsList[0].optionId:\n        return this.renderAllTransactions()\n      case transactionHeaderOptionsList[1].optionId:\n        return this.renderDebitTransactions()\n      case transactionHeaderOptionsList[2].optionId:\n        return this.renderCreditTransactions()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    const {activeTransactionOptionId} = this.state\n    return (\n      <div className=\"transactions-container\">\n        <div className=\"transaction-header\">\n          <h1 className=\"transaction-heading\">Transactions</h1>\n          <ul className=\"transaction-options-container\">\n            {transactionHeaderOptionsList.map(eachOption => (\n              <TransactionOptionButton\n                details={eachOption}\n                key={eachOption.optionId}\n                isActive={activeTransactionOptionId === eachOption.optionId}\n                changeTheActiveTransactionOptionId={\n                  this.changeTheActiveTransactionOptionId\n                }\n              />\n            ))}\n          </ul>\n        </div>\n        <div className=\"all-transactions-container\">\n          {this.renderAllTransactionViews()}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Transaction\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport Loader from 'react-loader-spinner'\nimport {format} from 'date-fns'\nimport collect from 'collect.js'\n\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  Legend,\n  ResponsiveContainer,\n  CartesianGrid,\n} from 'recharts'\nimport AddTransactionPopup from '../AddTransactionPopup'\nimport './index.css'\n\nconst APIConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProcess: 'IN_PROCESS',\n}\n\nclass OverviewGraph extends Component {\n  state = {\n    barData: [],\n    apiStatus: APIConstants.initial,\n  }\n\n  componentDidMount() {\n    this.getTheLast7DaysTransactionsDetails()\n  }\n\n  getTheLast7DaysTransactionsDetails = async () => {\n    this.setState({apiStatus: APIConstants.inProcess})\n    const userId = Cookies.get('user_id')\n    const isAdmin = userId === '3'\n    const url = isAdmin\n      ? 'https://bursting-gelding-24.hasura.app/api/rest/daywise-totals-last-7-days-admin'\n      : 'https://bursting-gelding-24.hasura.app/api/rest/daywise-totals-7-days'\n    const adminOptions = {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'x-hasura-admin-secret':\n          'g08A3qQy00y8yFDq3y6N1ZQnhOPOa4msdie5EtKS1hFStar01JzPKrtKEzYY2BtF',\n        'x-hasura-role': 'admin',\n      },\n    }\n    const userOptions = {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'x-hasura-admin-secret':\n          'g08A3qQy00y8yFDq3y6N1ZQnhOPOa4msdie5EtKS1hFStar01JzPKrtKEzYY2BtF',\n        'x-hasura-role': `user`,\n        'x-hasura-user-id': userId,\n      },\n    }\n    const options = userId === '3' ? adminOptions : userOptions\n    const response = await fetch(url, options)\n    if (response.ok) {\n      const data = await response.json()\n      if (isAdmin) {\n        const updatedAdminData = data.last_7_days_transactions_totals_admin.map(\n          each => ({\n            day: format(new Date(each.date), 'E'),\n            sum: each.sum,\n            type: each.type,\n          }),\n        )\n        this.setState({\n          barData: updatedAdminData,\n          apiStatus: APIConstants.success,\n        })\n      } else {\n        const updatedData = data.last_7_days_transactions_credit_debit_totals.map(\n          each => ({\n            day: format(new Date(each.date), 'E'),\n            sum: each.sum,\n            type: each.type,\n          }),\n        )\n        this.setState({barData: updatedData, apiStatus: APIConstants.success})\n      }\n    } else {\n      this.setState({apiStatus: APIConstants.failure})\n    }\n  }\n\n  renderFailureView = () => (\n    <div className=\"failure-view-card\">\n      <img\n        src=\"https://res.cloudinary.com/dytmw4swo/image/upload/v1690861891/MONEYMATTERS/Feeling_sorry-cuate_ogigsk.png\"\n        alt=\"error\"\n        className=\"error-image\"\n      />\n      <h1 className=\"error-heading\">Something Went Wrong</h1>\n      <button\n        type=\"button\"\n        className=\"retry-button\"\n        onClick={this.getTheTotalCreditsAndDebits}\n      >\n        Retry\n      </button>\n    </div>\n  )\n\n  renderLoadingView = () => (\n    <div className=\"credit-debit-loader-container\">\n      <Loader type=\"ThreeDots\" color=\"#2D60FF\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderGraph = barData => (\n    <ResponsiveContainer width=\"100%\" height={280}>\n      <BarChart\n        data={barData}\n        margin={{\n          top: 2,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3\" />\n        <XAxis\n          dataKey=\"day\"\n          tick={{\n            stroke: 'gray',\n            strokeWidth: 1,\n          }}\n        />\n        <YAxis\n          tick={{\n            stroke: 'gray',\n            strokeWidth: 0,\n          }}\n        />\n        <Legend\n          iconType=\"square\"\n          wrapperStyle={{\n            padding: 10,\n          }}\n          verticalAlign=\"top\"\n          align=\"right\"\n        />\n        <Bar dataKey=\"sum\" name=\"Debit\" fill=\"#4C78FF\" barSize=\"10\" rx=\"10\" />\n        <Bar dataKey=\"sum\" name=\"Credit\" fill=\"#FCAA0B\" barSize=\"20\" rx=\"10\" />\n      </BarChart>\n    </ResponsiveContainer>\n  )\n\n  renderGraphSuccessView = () => {\n    const {barData} = this.state\n    const creditedList = barData.map(each => {\n      if (each.type === 'credit') {\n        return each.sum\n      }\n      return 0\n    })\n    const debitedList = barData.map(each => {\n      if (each.type === 'debit') {\n        return each.sum\n      }\n      return 0\n    })\n    const credit = collect(creditedList).sum()\n    const debit = collect(debitedList).sum()\n    if (barData.length === 0) {\n      return (\n        <div className=\"last-transaction-container\">\n          <h1 className=\"no-result-last-transaction-heading\">\n            Debit & Credit Overview\n          </h1>\n          <div className=\"last-three-transaction-container-no-result\">\n            <img\n              src=\"https://res.cloudinary.com/dytmw4swo/image/upload/v1690859828/MONEYMATTERS/No_data-cuate_u47df0.png\"\n              alt=\"no result\"\n              className=\"no-result-image\"\n            />\n            <div className=\"no-result-text-container\">\n              <h1 className=\"no-result-heading\">No Transactions Found</h1>\n              <p className=\"no-result-para\">\n                Add transaction to see the Overview Graph\n              </p>\n              <AddTransactionPopup />\n            </div>\n          </div>\n        </div>\n      )\n    }\n    return (\n      <div className=\"overview-graph-wrapper\">\n        <h1 className=\"overview-graph-heading\">Debit & Credit Overview</h1>\n        <div className=\"overview-graph-container\">\n          <p className=\"graph-text\">\n            <span className=\"overview-graph-span-texts\">{credit}</span> Debited\n            & <span className=\"overview-graph-span-texts\">{debit}</span>{' '}\n            Credited in this Week\n          </p>\n          {this.renderGraph(barData)}\n        </div>\n      </div>\n    )\n  }\n\n  renderBarGraph = () => {\n    const {apiStatus} = this.state\n    switch (apiStatus) {\n      case APIConstants.success:\n        return this.renderGraphSuccessView()\n      case APIConstants.failure:\n        return this.renderFailureView()\n      case APIConstants.inProcess:\n        return this.renderLoadingView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return this.renderBarGraph()\n  }\n}\n\nexport default OverviewGraph\n","import {Component} from 'react'\nimport format from 'date-fns/format'\nimport Cookies from 'js-cookie'\nimport {BiUpArrowCircle, BiDownArrowCircle, BiUserCircle} from 'react-icons/bi'\nimport './index.css'\nimport DeletePopup from '../DeletePopup'\nimport UpdateTransactionPopup from '../UpdateTransactionPopup'\n\nclass LastTransactionItem extends Component {\n  render() {\n    const userId = Cookies.get('user_id')\n    const isAdmin = userId === '3'\n    const {eachTransaction} = this.props\n    const {id, type, transactionName, category, date, amount} = eachTransaction\n    const dateDetails = format(new Date(date), 'd MMM, h:m aa')\n    const amountText = type === 'credit' ? `+$${amount}` : `-$${amount}`\n    const amountTextClass =\n      type === 'credit' ? 'admin-credit-amount' : 'admin-debit-amount'\n    return (\n      <>\n        {' '}\n        {isAdmin ? (\n          <li className=\"transaction-item\">\n            <div className=\"transaction-detail-container\">\n              {type === 'credit' ? (\n                <BiUpArrowCircle size=\"30px\" color=\"#16DBAA\" />\n              ) : (\n                <BiDownArrowCircle size=\"30px\" color=\"#FE5C73\" />\n              )}\n              <BiUserCircle\n                size=\"30px\"\n                color=\"#000000\"\n                className=\"transaction-item-user-profile-icon\"\n              />\n              <p className=\"transaction-item-user-name\">Arlene McCoy</p>\n              <p className=\"admin-transaction-name\">{transactionName}</p>\n              <p className=\"admin-transaction-category \">{category}</p>\n              <p className=\"admin-transaction-date-details\">{dateDetails}</p>\n              <p className={amountTextClass}>{amountText}</p>\n            </div>\n          </li>\n        ) : (\n          <li className=\"transaction-item\">\n            <div className=\"transaction-detail-container\">\n              {type === 'credit' ? (\n                <BiUpArrowCircle size=\"30px\" color=\"#16DBAA\" />\n              ) : (\n                <BiDownArrowCircle size=\"30px\" color=\"#FE5C73\" />\n              )}\n              <p className=\"transaction-name\">{transactionName}</p>\n              <p className=\"transaction-category\">{category}</p>\n              <p className=\"transaction-date-details\">{dateDetails}</p>\n              <p className={amountTextClass}>{amountText}</p>\n              <UpdateTransactionPopup details={eachTransaction} />\n              <DeletePopup itemId={id} />\n            </div>\n          </li>\n        )}{' '}\n      </>\n    )\n  }\n}\n\nexport default LastTransactionItem\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport Loader from 'react-loader-spinner'\nimport AddTransactionPopup from '../AddTransactionPopup'\nimport LastTransactionItem from '../LastTransactionItem'\nimport './index.css'\n\nconst APIConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProcess: 'IN_PROCESS',\n}\n\nclass LastTransactions extends Component {\n  state = {\n    getTransactionApiStatus: APIConstants.initial,\n    transactionData: [],\n  }\n\n  componentDidMount() {\n    this.getTheLastTransactionDetails()\n  }\n\n  compareByDates = (a, b) => {\n    const data1 = new Date(a.date)\n    const data2 = new Date(b.date)\n    const differenceBetweenDates = data1 - data2\n    return -differenceBetweenDates\n  }\n\n  getTheLastTransactionDetails = async () => {\n    this.setState({getTransactionApiStatus: APIConstants.inProcess})\n    const userId = Cookies.get('user_id')\n    const options = {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'x-hasura-admin-secret':\n          'g08A3qQy00y8yFDq3y6N1ZQnhOPOa4msdie5EtKS1hFStar01JzPKrtKEzYY2BtF',\n        'x-hasura-role': 'user',\n        'x-hasura-user-id': `${userId}`,\n      },\n    }\n    const response = await fetch(\n      'https://bursting-gelding-24.hasura.app/api/rest/all-transactions?limit=3&offset=0',\n      options,\n    )\n    const data = await response.json()\n    if (response.ok === true) {\n      const updatedTransactionsData = {\n        transactions: data.transactions,\n      }\n      const updateTransactions = updatedTransactionsData.transactions.map(\n        eachTransaction => ({\n          amount: eachTransaction.amount,\n          category: eachTransaction.category,\n          date: eachTransaction.date,\n          id: eachTransaction.id,\n          transactionName: eachTransaction.transaction_name,\n          type: eachTransaction.type,\n          userId: eachTransaction.user_id,\n        }),\n      )\n      updateTransactions.sort(this.compareByDates)\n      this.setState({\n        transactionData: updateTransactions,\n        getTransactionApiStatus: APIConstants.success,\n      })\n    } else {\n      this.setState({getTransactionApiStatus: APIConstants.failure})\n    }\n  }\n\n  renderLoadingView = () => (\n    <div className=\"credit-debit-loader-container\">\n      <Loader type=\"ThreeDots\" color=\"#2D60FF\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderFailureView = () => (\n    <div className=\"failure-view-card\">\n      <img\n        src=\"https://res.cloudinary.com/dytmw4swo/image/upload/v1690861891/MONEYMATTERS/Feeling_sorry-cuate_ogigsk.png\"\n        alt=\"error\"\n        className=\"error-image\"\n      />\n      <h1 className=\"error-heading\">Something Went Wrong</h1>\n      <button\n        type=\"button\"\n        className=\"retry-button\"\n        onClick={this.getTheTotalCreditsAndDebits}\n      >\n        Retry\n      </button>\n    </div>\n  )\n\n  renderLastTransactionSuccessView = () => {\n    const {transactionData} = this.state\n    if (transactionData.length === 0) {\n      return (\n        <div className=\"last-transaction-container\">\n          <h1 className=\"last-transaction-heading\">Last Transaction</h1>\n          <div className=\"last-three-transaction-container-no-result\">\n            <img\n              src=\"https://res.cloudinary.com/dytmw4swo/image/upload/v1690859828/MONEYMATTERS/No_data-cuate_u47df0.png\"\n              alt=\"no result\"\n              className=\"no-result-image\"\n            />\n            <div className=\"no-result-text-container\">\n              <h1 className=\"no-result-heading\">No Transactions Found</h1>\n              <p className=\"no-result-para\">\n                Add transaction to see the last three transactions\n              </p>\n              <AddTransactionPopup />\n            </div>\n          </div>\n        </div>\n      )\n    }\n    return (\n      <div className=\"last-transaction-container\">\n        <h1 className=\"last-transaction-heading\">Last Transaction</h1>\n        <ul className=\"last-three-transaction-container\">\n          {transactionData.map(eachTransaction => (\n            <LastTransactionItem\n              eachTransaction={eachTransaction}\n              key={eachTransaction.id}\n            />\n          ))}\n        </ul>\n      </div>\n    )\n  }\n\n  renderLastTransactionDetails = () => {\n    const {getTransactionApiStatus} = this.state\n    switch (getTransactionApiStatus) {\n      case APIConstants.success:\n        return this.renderLastTransactionSuccessView()\n      case APIConstants.failure:\n        return this.renderFailureView()\n      case APIConstants.inProcess:\n        return this.renderLoadingView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return <>{this.renderLastTransactionDetails()}</>\n  }\n}\n\nexport default LastTransactions\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport Loader from 'react-loader-spinner'\n\nimport OverviewGraph from '../OverviewGraph'\nimport './index.css'\nimport LastTransactions from '../LastTransactions'\nimport AddTransactionPopup from '../AddTransactionPopup'\n\nconst APIConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProcess: 'IN_PROCESS',\n}\n\nclass Accounts extends Component {\n  state = {\n    creditTotalSum: 0,\n    debitTotalSum: 0,\n    getTotalsApiStatus: APIConstants.initial,\n  }\n\n  componentDidMount() {\n    this.getTheTotalCreditsAndDebits()\n  }\n\n  updateTheTotals = totalsData => {\n    totalsData.map(eachData =>\n      eachData.type === 'credit'\n        ? this.setState({creditTotalSum: eachData.sum})\n        : this.setState({debitTotalSum: eachData.sum}),\n    )\n  }\n\n  getTheTotalCreditsAndDebits = async () => {\n    this.setState({getTotalsApiStatus: APIConstants.inProcess})\n    const userId = Cookies.get('user_id')\n    const isAdmin = userId === '3'\n    const url = isAdmin\n      ? 'https://bursting-gelding-24.hasura.app/api/rest/transaction-totals-admin'\n      : 'https://bursting-gelding-24.hasura.app/api/rest/credit-debit-totals'\n    const userOptions = {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'x-hasura-admin-secret':\n          'g08A3qQy00y8yFDq3y6N1ZQnhOPOa4msdie5EtKS1hFStar01JzPKrtKEzYY2BtF',\n        'x-hasura-role': `user`,\n        'x-hasura-user-id': `${userId}`,\n      },\n    }\n    const adminOptions = {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'x-hasura-admin-secret':\n          'g08A3qQy00y8yFDq3y6N1ZQnhOPOa4msdie5EtKS1hFStar01JzPKrtKEzYY2BtF',\n        'x-hasura-role': 'admin',\n      },\n    }\n    const options = isAdmin ? adminOptions : userOptions\n    const response = await fetch(url, options)\n    const data = await response.json()\n    if (response.ok === true) {\n      if (isAdmin) {\n        const updatedAdminData = {\n          transactionTotalsAdmin: data.transaction_totals_admin,\n        }\n        this.updateTheTotals(updatedAdminData.transactionTotalsAdmin)\n        this.setState({getTotalsApiStatus: APIConstants.success})\n      } else {\n        const updatedTotalsData = {\n          totalsCreditDebitTransactions: data.totals_credit_debit_transactions,\n        }\n        this.updateTheTotals(updatedTotalsData.totalsCreditDebitTransactions)\n        this.setState({getTotalsApiStatus: APIConstants.success})\n      }\n    } else {\n      this.setState({getTotalsApiStatus: APIConstants.failure})\n    }\n  }\n\n  renderCreditAndDebitCardsSuccessView = () => {\n    const {creditTotalSum, debitTotalSum} = this.state\n    return (\n      <div className=\"credit-and-debit-wrapper\">\n        <div className=\"dashboard-money-details-card dashboard-money-details-credit-card\">\n          <div className=\"money-details-wrapper\">\n            <h1 className=\"credited-money\">${creditTotalSum}</h1>\n            <p className=\"transaction-type\">Credit</p>\n          </div>\n          <img\n            src=\"https://res.cloudinary.com/dytmw4swo/image/upload/v1690686691/MONEYMATTERS/Group_2_kafhn3.png\"\n            alt=\"credit\"\n            className=\"dashboard-credit-image\"\n          />\n        </div>\n        <div className=\"dashboard-money-details-card\">\n          <div className=\"money-details-wrapper\">\n            <h1 className=\"debited-money\">${debitTotalSum}</h1>\n            <p className=\"transaction-type\">Debit</p>\n          </div>\n          <img\n            src=\"https://res.cloudinary.com/dytmw4swo/image/upload/v1690687351/MONEYMATTERS/Group_3_bvywop.png\"\n            alt=\"debit\"\n            className=\"dashboard-debit-image\"\n          />\n        </div>\n      </div>\n    )\n  }\n\n  renderFailureView = () => (\n    <div className=\"failure-view-card\">\n      <img\n        src=\"https://res.cloudinary.com/dytmw4swo/image/upload/v1690861891/MONEYMATTERS/Feeling_sorry-cuate_ogigsk.png\"\n        alt=\"error\"\n        className=\"error-image\"\n      />\n      <h1 className=\"error-heading\">Something Went Wrong</h1>\n      <button\n        type=\"button\"\n        className=\"retry-button\"\n        onClick={this.getTheTotalCreditsAndDebits}\n      >\n        Retry\n      </button>\n    </div>\n  )\n\n  renderLoadingView = () => (\n    <div className=\"credit-debit-loader-container\">\n      <Loader type=\"ThreeDots\" color=\"#2D60FF\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderCreditAndDebitCards = () => {\n    const {getTotalsApiStatus} = this.state\n    switch (getTotalsApiStatus) {\n      case APIConstants.success:\n        return this.renderCreditAndDebitCardsSuccessView()\n      case APIConstants.failure:\n        return this.renderFailureView()\n      case APIConstants.inProcess:\n        return this.renderLoadingView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    const userId = Cookies.get('user_id')\n    return (\n      <div className=\"dashboard\">\n        <div className=\"dashboard-header\">\n          <h1 className=\"header-heading\">Accounts</h1>\n          {userId === '3' ? null : <AddTransactionPopup />}\n        </div>\n        <div className=\"dashboard-section\">\n          {this.renderCreditAndDebitCards()}\n          <LastTransactions />\n          <OverviewGraph />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Accounts\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport Loader from 'react-loader-spinner'\nimport './index.css'\nimport AddTransactionPopup from '../AddTransactionPopup'\n\nconst userProfileApiConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProcess: 'IN_PROCESS',\n}\n\nclass Profile extends Component {\n  state = {\n    userProfileDetails: [],\n    userProfileDetailsApiStatus: userProfileApiConstants.initial,\n  }\n\n  componentDidMount() {\n    this.getTheProfileDetails()\n  }\n\n  getTheProfileDetails = async () => {\n    this.setState({\n      userProfileDetailsApiStatus: userProfileApiConstants.inProcess,\n    })\n    const id = Cookies.get('user_id')\n    const options = {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'x-hasura-admin-secret':\n          'g08A3qQy00y8yFDq3y6N1ZQnhOPOa4msdie5EtKS1hFStar01JzPKrtKEzYY2BtF',\n        'x-hasura-role': 'user',\n        'x-hasura-user-id': `${id}`,\n      },\n    }\n    const response = await fetch(\n      'https://bursting-gelding-24.hasura.app/api/rest/profile',\n      options,\n    )\n    const data = await response.json()\n    if (response.ok === true) {\n      const fetchedUserProfileData = data.users[0]\n      const updatedUserProfileData = {\n        city: fetchedUserProfileData.city,\n        country: fetchedUserProfileData.country,\n        dateOfBirth: fetchedUserProfileData.date_of_birth,\n        email: fetchedUserProfileData.email,\n        name: fetchedUserProfileData.name,\n        permanentAddress: fetchedUserProfileData.permanent_address,\n        postalCode: fetchedUserProfileData.postal_code,\n        presentAddress: fetchedUserProfileData.present_address,\n      }\n      this.setState({\n        userProfileDetails: updatedUserProfileData,\n        userProfileDetailsApiStatus: userProfileApiConstants.success,\n      })\n    } else {\n      this.setState({\n        userProfileDetailsApiStatus: userProfileApiConstants.failure,\n      })\n    }\n  }\n\n  renderUserProfileSuccessView = () => {\n    const {userProfileDetails} = this.state\n    const {\n      city,\n      country,\n      dateOfBirth,\n      email,\n      name,\n      permanentAddress,\n      postalCode,\n      presentAddress,\n    } = userProfileDetails\n    const cityValue = city === null ? '' : city\n    const countryValue = country === null ? '' : country\n    const dateOfBirthValue = country === null ? '' : dateOfBirth\n    const emailValue = email === null ? '' : email\n    const nameValue = name === null ? '' : name\n    const permanentAddressValue =\n      permanentAddress === null ? '' : permanentAddress\n    const postalCodeValue = postalCode === null ? '' : postalCode\n    const presentAddressValue = presentAddress === null ? '' : presentAddress\n\n    const password = 'password'\n    return (\n      <div className=\"profile-card\">\n        <img\n          src=\"https://res.cloudinary.com/dytmw4swo/image/upload/v1690785177/pexels-christina-morillo-1181690_1_rup0db.jpg\"\n          className=\"user-profile-picture\"\n          alt=\"user profile\"\n        />\n        <div className=\"profile-inputs-first-container\">\n          <div className=\"profile-inputs-wrapper\">\n            <label htmlFor=\"username\" className=\"profile-input-labels\">\n              Your Name\n            </label>\n            <br />\n            <input\n              readOnly\n              value={nameValue}\n              type=\"text\"\n              id=\"username\"\n              placeholder=\"your name\"\n              className=\"profile-inputs\"\n            />\n          </div>\n          <div className=\"profile-inputs-wrapper\">\n            <label htmlFor=\"email\" className=\"profile-input-labels\">\n              Email\n            </label>\n            <br />\n            <input\n              readOnly\n              value={emailValue}\n              type=\"text\"\n              id=\"email\"\n              placeholder=\"email\"\n              className=\"profile-inputs\"\n            />\n          </div>\n          <div className=\"profile-inputs-wrapper\">\n            <label htmlFor=\"dateOfBirth\" className=\"profile-input-labels\">\n              Date of Birth\n            </label>\n            <br />\n            <input\n              readOnly\n              type=\"date\"\n              value={dateOfBirthValue}\n              id=\"dateOfBirth\"\n              className=\"profile-inputs\"\n            />\n          </div>\n          <div className=\"profile-inputs-wrapper\">\n            <label htmlFor=\"permanentAddress\" className=\"profile-input-labels\">\n              Permanent Address\n            </label>\n            <br />\n            <input\n              readOnly\n              type=\"text\"\n              value={permanentAddressValue}\n              id=\"permanentAddress\"\n              placeholder=\"permanent address\"\n              className=\"profile-inputs\"\n            />\n          </div>\n          <div className=\"profile-inputs-wrapper\">\n            <label htmlFor=\"postalCode\" className=\"profile-input-labels\">\n              Postal Code\n            </label>\n            <br />\n            <input\n              readOnly\n              value={postalCodeValue}\n              type=\"text\"\n              id=\"Postal Code\"\n              placeholder=\"postal code\"\n              className=\"profile-inputs\"\n            />\n          </div>\n        </div>\n        <div className=\"profile-inputs-first-container\">\n          <div className=\"profile-inputs-wrapper\">\n            <label htmlFor=\"username\" className=\"profile-input-labels\">\n              User Name\n            </label>\n            <br />\n            <input\n              readOnly\n              value={nameValue}\n              type=\"text\"\n              id=\"username\"\n              placeholder=\"user name\"\n              className=\"profile-inputs\"\n            />\n          </div>\n          <div className=\"profile-inputs-wrapper\">\n            <label htmlFor=\"password\" className=\"profile-input-labels\">\n              Password\n            </label>\n            <br />\n            <input\n              readOnly\n              value={password}\n              type=\"password\"\n              id=\"password\"\n              placeholder=\"password\"\n              className=\"profile-inputs\"\n            />\n          </div>\n          <div className=\"profile-inputs-wrapper\">\n            <label htmlFor=\"presentAddress\" className=\"profile-input-labels\">\n              Present Address\n            </label>\n            <br />\n            <input\n              readOnly\n              value={presentAddressValue}\n              type=\"text\"\n              id=\"presentAddress\"\n              className=\"profile-inputs\"\n              placeholder=\"present address\"\n            />\n          </div>\n          <div className=\"profile-inputs-wrapper\">\n            <label htmlFor=\"city\" className=\"profile-input-labels\">\n              City\n            </label>\n            <br />\n            <input\n              readOnly\n              value={cityValue}\n              type=\"text\"\n              id=\"city\"\n              placeholder=\"city\"\n              className=\"profile-inputs\"\n            />\n          </div>\n          <div className=\"profile-inputs-wrapper\">\n            <label htmlFor=\"country\" className=\"profile-input-labels\">\n              Country\n            </label>\n            <br />\n            <input\n              readOnly\n              value={countryValue}\n              type=\"text\"\n              id=\"country\"\n              placeholder=\"country\"\n              className=\"profile-inputs\"\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  renderProfileLoadingView = () => (\n    <div className=\"profile-loader-container\">\n      <Loader type=\"ThreeDots\" color=\"#2D60FF\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderFailureView = () => (\n    <div className=\"failure-view-card\">\n      <img\n        src=\"https://res.cloudinary.com/dytmw4swo/image/upload/v1690861891/MONEYMATTERS/Feeling_sorry-cuate_ogigsk.png\"\n        alt=\"error\"\n        className=\"error-image\"\n      />\n      <h1 className=\"error-heading\">Something Went Wrong</h1>\n      <button\n        type=\"button\"\n        className=\"retry-button\"\n        onClick={this.getTheTotalCreditsAndDebits}\n      >\n        Retry\n      </button>\n    </div>\n  )\n\n  renderAllProfileViews = () => {\n    const {userProfileDetailsApiStatus} = this.state\n    switch (userProfileDetailsApiStatus) {\n      case userProfileApiConstants.success:\n        return this.renderUserProfileSuccessView()\n      case userProfileApiConstants.failure:\n        return this.renderFailureView()\n      case userProfileApiConstants.inProcess:\n        return this.renderProfileLoadingView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    const userId = Cookies.get('user_id')\n    return (\n      <div className=\"profile-container\">\n        <div className=\"profile-header-section\">\n          <h1 className=\"profile-heading\">Profile</h1>\n          {userId === '3' ? null : <AddTransactionPopup />}\n        </div>\n        <div className=\"profile-section\">{this.renderAllProfileViews()}</div>\n      </div>\n    )\n  }\n}\n\nexport default Profile\n","import {Component} from 'react'\n\nimport SideNavbar from '../SideNavbar'\nimport './index.css'\nimport MoneyMatterContext from '../../Context/MoneyMattersContext'\n\nimport Transaction from '../Transactions'\nimport Accounts from '../Accounts'\nimport Profile from '../Profile'\n\nclass Dashboard extends Component {\n  renderAccounts = () => <Accounts />\n\n  renderTransactions = () => <Transaction />\n\n  renderProfile = () => <Profile />\n\n  renderAllViews = id => {\n    switch (id) {\n      case 'HOME':\n        return this.renderAccounts()\n      case 'TRANSACTIONS':\n        return this.renderTransactions()\n      case 'PROFILE':\n        return this.renderProfile()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return (\n      <MoneyMatterContext.Consumer>\n        {value => {\n          const {activeOptionId} = value\n          return (\n            <div className=\"dashboard-container\">\n              <SideNavbar />\n              {this.renderAllViews(activeOptionId)}\n            </div>\n          )\n        }}\n      </MoneyMatterContext.Consumer>\n    )\n  }\n}\n\nexport default Dashboard\n","import {Redirect, Route} from 'react-router-dom'\nimport Cookies from 'js-cookie'\n\nconst ProtectedRoute = props => {\n  const userId = Cookies.get('user_id')\n  if (userId === undefined) {\n    return <Redirect to=\"/login\" />\n  }\n  return <Route {...props} />\n}\n\nexport default ProtectedRoute\n","import React from 'react'\nimport {Route, Switch} from 'react-router-dom'\nimport LoginRoute from './components/LoginRoute'\nimport Dashboard from './components/Dashboard'\nimport './App.css'\nimport ProtectedRoute from './components/ProtectedRoute'\n\nimport MoneyMatterContext from './Context/MoneyMattersContext'\n\nconst sideNavBarOptionsList = [\n  {\n    optionId: 'HOME',\n    displayText: 'Home',\n    iconUrl:\n      'https://res.cloudinary.com/dytmw4swo/image/upload/v1690706817/MONEYMATTERS/home_2_1_yoafgv.jpg',\n    activeIconUrl:\n      'https://res.cloudinary.com/dytmw4swo/image/upload/v1690706792/MONEYMATTERS/home_2_gyxdru.jpg',\n  },\n  {\n    optionId: 'TRANSACTIONS',\n    displayText: 'Transactions',\n    iconUrl:\n      'https://res.cloudinary.com/dytmw4swo/image/upload/v1690707053/MONEYMATTERS/transfer_1_n9ah5j.jpg',\n    activeIconUrl:\n      'https://res.cloudinary.com/dytmw4swo/image/upload/v1690707070/MONEYMATTERS/transfer_1_1_xpvymn.jpg',\n  },\n  {\n    optionId: 'PROFILE',\n    displayText: 'Profile',\n    iconUrl:\n      'https://res.cloudinary.com/dytmw4swo/image/upload/v1690707195/MONEYMATTERS/user_3_1_duwqwf.jpg',\n    activeIconUrl:\n      'https://res.cloudinary.com/dytmw4swo/image/upload/v1690707171/MONEYMATTERS/user_3_1_1_chrofz.jpg',\n  },\n]\n\nclass App extends React.Component {\n  state = {\n    optionsList: sideNavBarOptionsList,\n    activeOptionId: sideNavBarOptionsList[0].optionId,\n  }\n\n  changeSideNavbarActiveOptionId = id => {\n    this.setState({activeOptionId: id})\n  }\n\n  render() {\n    const {activeOptionId, optionsList} = this.state\n    return (\n      <MoneyMatterContext.Provider\n        value={{\n          activeOptionId,\n          optionsList,\n          changeSideNavbarActiveOptionId: this.changeSideNavbarActiveOptionId,\n        }}\n      >\n        <div className=\"app-container\">\n          <Switch>\n            <ProtectedRoute exact path=\"/\" component={Dashboard} />\n            <Route exact path=\"/login\" component={LoginRoute} />\n          </Switch>\n        </div>\n      </MoneyMatterContext.Provider>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter} from 'react-router-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}